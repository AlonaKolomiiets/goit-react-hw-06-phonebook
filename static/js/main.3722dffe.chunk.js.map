{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactListItem.module.css","components/Filter/Filter.module.css","redux/constants/index.js","redux/toolkit/reducers/contactsReducer.js","redux/toolkit/reducers/index.js","redux/store.js","redux/toolkit/actions/contacts.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ADD_CONTACT","DELETE_CONTACT","INITIAL_CONTACT","CHANGE_FILTER","contacts","createReducer","items","id","name","number","filter","state","payload","item","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","contactsReducer","rootReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","addContact","createAction","deleteContact","changeFilter","initialState","ContactForm","useSelector","dispatch","useDispatch","add","contactObj","some","contact","toLowerCase","uniqueContact","alert","useState","setForm","inputHandler","target","value","prev","onSubmit","event","preventDefault","uuidv4","className","styles","contactFormLable","onChange","type","placeholder","ContactListItem","contactListItemBtn","onClick","deleteContacts","ContactList","filteredContacts","map","Filter","FilterLable","App","length","elem","includes","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,iBAAmB,wC,mBCArCD,EAAOC,QAAU,CAAC,mBAAqB,8C,mBCAvCD,EAAOC,QAAU,CAAC,YAAc,8B,wMCDnBC,EAAc,eACdC,EAAiB,kBACjBC,EAAkB,mBAElBC,EAAgB,iBCkCdC,EArBEC,YAVI,CACnBC,MAAO,CACL,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhDC,OAAQ,KAGoB,mBAC3BV,GAAc,SAACW,EAAD,OAAUC,EAAV,EAAUA,QAAV,mBAAC,eACXD,GADU,IAEbL,MAAM,GAAD,mBAAMK,EAAML,OAAZ,CAAmBM,SAHE,cAM3BX,GAAiB,SAACU,EAAD,OAAUC,EAAV,EAAUA,QAAV,mBAAC,eACdD,GADa,IAEhBL,MAAOK,EAAML,MAAMI,QAAO,SAACG,GAAD,OAAUA,EAAKN,KAAOK,UARtB,cAW3BT,GAAgB,SAACQ,EAAD,OAAUC,EAAV,EAAUA,QAAV,mBAAC,eACbD,GADY,IAEfD,OAAQE,OAbkB,cAe3BV,GAAkB,SAACS,EAAD,OAAUC,EAAV,EAAUA,QAAV,mBAAC,eACfD,GADc,IAEjBL,MAAOM,OAjBmB,ICZxBE,EAAgB,CACpBC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGRC,EAAmBC,YAAeL,EAAeM,GAMxCC,EAJKC,YAAgB,CAClClB,SAAUc,ICcNK,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAEWC,EAAQC,YAAe,CAClCC,QAASf,EACTE,aACAc,UAAUC,IAGCC,EAAYC,YAAaN,G,gBClCzBO,EAAaC,YAAa1C,GAM1B2C,EAAgBD,YAAazC,GAM7B2C,EAAeF,YAAavC,G,GAOVuC,YAAaxC,G,+BCrBtC2C,EAAe,CACnBrC,KAAM,GACNC,OAAQ,IAwEKqC,EArEK,WAClB,IAAM1C,EAAW2C,aAAY,SAACpC,GAAD,OAAWA,EAAMP,SAASE,SACjD0C,EAAWC,cAQXC,EAAM,SAACC,IANS,SAAC3C,GACrB,OAAOJ,EAASgD,MACd,SAACC,GAAD,OAAaA,EAAQ7C,KAAK8C,gBAAkB9C,EAAK8C,iBAKnDC,CAAcJ,EAAW3C,MAErBwC,EAASP,EAAWU,IADpBK,MAAM,GAAD,OAAIL,EAAW3C,KAAf,6BAZa,EAgBYiD,mBAAS,eACxCZ,IAjBmB,0BAgBfrC,EAhBe,EAgBfA,KAAMC,EAhBS,EAgBTA,OAAUiD,EAhBD,KAoBlBC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAgBD,EAAhBC,MAAOrD,EAASoD,EAATpD,KACfkD,GAAQ,SAACI,GAAD,mBAAC,eACJA,GADG,kBAELtD,EAAOqD,QAiBZ,OACE,8BACE,uBAAME,SAfY,SAACC,GACrBA,EAAMC,iBACN,IAAMZ,EAAU,CACd7C,OACAC,SACAF,GAAI2D,eAGNhB,EAAIG,GAEJK,EAAQb,IAKN,UACE,uBAAOsB,UAAWC,IAAOC,iBAAzB,SACE,uBACEC,SAAUX,EACVY,KAAK,OACL/D,KAAK,OACLgE,YAAY,gBACZX,MAAOrD,MAGX,uBAAO2D,UAAWC,IAAOC,iBAAzB,SACE,uBACEC,SAAUX,EACVY,KAAK,MACL/D,KAAK,SACLgE,YAAY,kBACZX,MAAOpD,MAIX,wBAAQ8D,KAAK,SAAb,+B,iBC1COE,EA1BS,SAAC,GAA0B,IAAxBlE,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC7BuC,EAAWC,cAIjB,OACE,mCACE,+BACGzC,EADH,IACUC,EACR,wBACE0D,UAAWC,IAAOM,mBAClBC,QAAS,kBATM,SAACpE,GACtByC,EAASL,EAAcpC,IAQFqE,CAAerE,IAFhC,sBAFOA,MCgBAsE,EAzBK,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACrB,OACE,6BACGA,EAAiBC,KAAI,SAAC1B,GAAD,OACpB,cAAC,EAAD,CAEE9C,GAAI8C,EAAQ9C,GACZC,KAAM6C,EAAQ7C,KACdC,OAAQ4C,EAAQ5C,QAHX4C,EAAQ9C,U,iBCoBRyE,EAxBA,WACb,IAAMtE,EAASqC,aAAY,SAACpC,GAAD,OAAWA,EAAMP,SAASM,UAC/CsC,EAAWC,cAMjB,OACE,qCACE,sDACA,uBAAOkB,UAAWC,IAAOa,YAAzB,SACE,uBACEX,SATa,SAAC,GAAgB,IAC5BT,EAD2B,EAAbD,OACdC,MACRb,EAASJ,EAAaiB,KAQhBU,KAAK,OACL/D,KAAK,SACLgE,YAAY,gBACZX,MAAOnD,UCSFwE,EAzBH,WACV,IAAM9E,EAAW2C,aAAY,SAACpC,GAAD,OAAWA,EAAMP,SAASE,SACjDI,EAASqC,aAAY,SAACpC,GAAD,OAAWA,EAAMP,SAASM,UAYrD,OACE,gCACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAaoE,iBAfVpE,EAAOyE,OAGH/E,EAASM,QAAO,SAAC0E,GAAD,OACrBA,EAAK5E,KAAK8C,cAAc+B,SAAS3E,EAAO4C,kBAHnClD,QCHbkF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUtD,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAauD,QAAS,KAAMlD,UAAWA,EAAvC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRmD,SAASC,eAAe,W","file":"static/js/main.3722dffe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactFormLable\":\"ContactForm_contactFormLable__24Pjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItemBtn\":\"ContactListItem_contactListItemBtn__Zz2BS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterLable\":\"Filter_FilterLable__3aYIw\"};","export const ADD_CONTACT = \"@contact/add\";\nexport const DELETE_CONTACT = \"@contact/delete\";\nexport const INITIAL_CONTACT = \"@contact/initial\";\n\nexport const CHANGE_FILTER = \"@filter/change\";\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  CHANGE_FILTER,\n  INITIAL_CONTACT,\n} from \"../../constants/index\";\nconst initialState = {\n  items: [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ],\n  filter: \"\",\n};\n\nconst contacts = createReducer(initialState, {\n  [ADD_CONTACT]: (state, { payload }) => ({\n    ...state,\n    items: [...state.items, payload],\n  }),\n\n  [DELETE_CONTACT]: (state, { payload }) => ({\n    ...state,\n    items: state.items.filter((item) => item.id !== payload),\n  }),\n\n  [CHANGE_FILTER]: (state, { payload }) => ({\n    ...state,\n    filter: payload,\n  }),\n  [INITIAL_CONTACT]: (state, { payload }) => ({\n    ...state,\n    items: payload,\n  }),\n});\n\nexport default contacts;\n\n// const contacts = (state = initialState, action) => {\n//   switch (action.type) {\n//     case ADD_CONTACT:\n//       return { ...state, items: [...state.items, action.payload] };\n//     case DELETE_CONTACT:\n//       return {\n//         ...state,\n//         items: state.items.filter((item) => item.id !== action.payload),\n//       };\n//     case CHANGE_FILTER:\n//       return {\n//         ...state,\n//         filter: action.payload,\n//       };\n//     case INITIAL_CONTACT:\n//       return {\n//         ...state,\n//         items: action.payload,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export default contacts;\n","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contactsReducer\";\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, contactsReducer);\n\nconst rootReducer = combineReducers({\n  contacts: persistedReducer,\n});\n\nexport default rootReducer;\n// import { combineReducers } from \"redux\";\n// import contacts from \"./contactsReducer\";\n\n// const rootReducer = combineReducers({\n//   contacts,\n// });\n\n// export default rootReducer;\n","// import { createStore } from \"redux\";\n// import rootReducer from \"./toolkit/reducers/index\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n\n// import { configureStore } from \"@reduxjs/toolkit\";\n// import rootReducer from \"./toolkit/reducers/index\";\n\n// const store = configureStore({ reducer: rootReducer });\n\n// export default store;\n\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./toolkit/reducers/index\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  CHANGE_FILTER,\n  INITIAL_CONTACT,\n} from \"../../constants/index\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(ADD_CONTACT);\n// export const addContact = (contact) => ({\n//   type: ADD_CONTACT,\n//   payload: contact,\n// });\n\nexport const deleteContact = createAction(DELETE_CONTACT);\n// export const deleteContact = (id) => ({\n//   type: DELETE_CONTACT,\n//   payload: id,\n// });\n\nexport const changeFilter = createAction(CHANGE_FILTER);\n\n// export const changeFilter = (filter) => ({\n//   type: CHANGE_FILTER,\n//   payload: filter,\n// });\n\nexport const initialContacts = createAction(INITIAL_CONTACT);\n\n// export const initialContacts = (contacts) => ({\n//   type: INITIAL_CONTACT,\n//   payload: contacts,\n// });\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/toolkit/actions/contacts\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = () => {\n  const contacts = useSelector((state) => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const uniqueContact = (name) => {\n    return contacts.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const add = (contactObj) => {\n    uniqueContact(contactObj.name)\n      ? alert(`${contactObj.name} is already in contacts`)\n      : dispatch(addContact(contactObj));\n  };\n\n  const [{ name, number }, setForm] = useState({\n    ...initialState,\n  });\n\n  const inputHandler = ({ target }) => {\n    const { value, name } = target;\n    setForm((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    add(contact);\n\n    setForm(initialState);\n  };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <label className={styles.contactFormLable}>\n          <input\n            onChange={inputHandler}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name...\"\n            value={name}\n          ></input>\n        </label>\n        <label className={styles.contactFormLable}>\n          <input\n            onChange={inputHandler}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter number...\"\n            value={number}\n          ></input>\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n\n// import React, { useState } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import styles from \"./ContactForm.module.css\";\n// import PropTypes from \"prop-types\";\n\n// const initialState = {\n//   name: \"\",\n//   number: \"\",\n// };\n\n// const ContactForm = ({ addToPhonebook }) => {\n//   const [{ name, number }, setForm] = useState({\n//     ...initialState,\n//   });\n\n//   const inputHandler = ({ target }) => {\n//     const { value, name } = target;\n//     setForm((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     const contact = {\n//       name,\n//       number,\n//       id: uuidv4(),\n//     };\n\n//     addToPhonebook(contact);\n\n//     setForm(initialState);\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={submitHandler}>\n//         <label className={styles.contactFormLable}>\n//           <input\n//             onChange={inputHandler}\n//             type=\"text\"\n//             name=\"name\"\n//             placeholder=\"Enter name...\"\n//             value={name}\n//           ></input>\n//         </label>\n//         <label className={styles.contactFormLable}>\n//           <input\n//             onChange={inputHandler}\n//             type=\"tel\"\n//             name=\"number\"\n//             placeholder=\"Enter number...\"\n//             value={number}\n//           ></input>\n//         </label>\n\n//         <button type=\"submit\">Add contact</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// ContactForm.propTypes = {\n//   addToPhonebook: PropTypes.func.isRequired,\n// };\n\n// export default ContactForm;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/toolkit/actions/contacts\";\nimport styles from \"./ContactListItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const deleteContacts = (id) => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <>\n      <li key={id}>\n        {name}:{number}\n        <button\n          className={styles.contactListItemBtn}\n          onClick={() => deleteContacts(id)}\n        >\n          Delete\n        </button>\n      </li>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n\n// import React from \"react\";\n// import styles from \"./ContactListItem.module.css\";\n// import PropTypes from \"prop-types\";\n\n// const ContactListItem = ({ id, name, number, deleteContact }) => {\n//   return (\n//     <>\n//       <li key={id}>\n//         {name}:{number}\n//         <button\n//           className={styles.contactListItemBtn}\n//           onClick={() => deleteContact(id)}\n//         >\n//           Delete\n//         </button>\n//       </li>\n//     </>\n//   );\n// };\n\n// ContactListItem.propTypes = {\n//   id: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n//   deleteContact: PropTypes.func.isRequired,\n// };\n\n// export default ContactListItem;\n","import React from \"react\";\nimport ContactListItem from \"./ContactListItem\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ filteredContacts }) => {\n  return (\n    <ul>\n      {filteredContacts.map((contact) => (\n        <ContactListItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ContactList;\n\n// import React from \"react\";\n// import ContactListItem from \"./ContactListItem\";\n// import PropTypes from \"prop-types\";\n\n// const ContactList = ({ filteredContacts, deleteContact }) => {\n//   return (\n//     <ul>\n//       {filteredContacts.map((contact) => (\n//         <ContactListItem\n//           key={contact.id}\n//           id={contact.id}\n//           name={contact.name}\n//           number={contact.number}\n//           deleteContact={deleteContact}\n//         />\n//       ))}\n//     </ul>\n//   );\n// };\n\n// ContactList.propTypes = {\n//   filteredContacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n\n//   deleteContact: PropTypes.func.isRequired,\n// };\n\n// export default ContactList;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/toolkit/actions/contacts\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = () => {\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const inputHandler = ({ target }) => {\n    const { value } = target;\n    dispatch(changeFilter(value));\n  };\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <label className={styles.FilterLable}>\n        <input\n          onChange={inputHandler}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name...\"\n          value={filter}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n\n// import React from 'react';\n// import styles from './Filter.module.css';\n// import PropTypes from 'prop-types';\n\n// const Filter = ({ filter, inputHandler }) => {\n//   return (\n//     <>\n//       <p>Find contacts by name</p>\n//       <label className={styles.FilterLable}>\n//         <input\n//           onChange={inputHandler}\n//           type=\"text\"\n//           name=\"filter\"\n//           placeholder=\"Enter name...\"\n//           value={filter}\n//         />\n//       </label>\n//     </>\n//   );\n// };\n\n// Filter.propTypes = {\n//   filter: PropTypes.string,\n//   inputHandler: PropTypes.func.isRequired,\n// };\n\n// export default Filter;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nconst App = () => {\n  const contacts = useSelector((state) => state.contacts.items);\n  const filter = useSelector((state) => state.contacts.filter);\n\n  const filterContacts = () => {\n    if (!filter.length) {\n      return contacts;\n    } else {\n      return contacts.filter((elem) =>\n        elem.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList filteredContacts={filterContacts()} />\n    </div>\n  );\n};\n\nexport default App;\n\n// import React, { useEffect } from \"react\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import ContactForm from \"./components/ContactForm/ContactForm\";\n// import ContactList from \"./components/ContactList\";\n// import Filter from \"./components/Filter/Filter\";\n// import {\n//   addContact,\n//   deleteContact,\n//   changeFilter,\n//   initialContacts,\n// } from \"./redux/toolkit/actions/contacts\";\n\n// // const initialState = {\n// //   contacts: [\n// //     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n// //     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n// //     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n// //     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n// //   ],\n// //   filter: \"\",\n// // };\n\n// const App = () => {\n//   // const [contacts, setContacts] = useState([...initialState.contacts]);\n//   // const [filter, setFilter] = useState(initialState.filter);\n//   const contacts = useSelector((state) => state.contacts.items);\n//   const filter = useSelector((state) => state.contacts.filter);\n//   const dispatch = useDispatch();\n\n//   const inputHandler = ({ target }) => {\n//     const { value } = target;\n//     // setFilter(value);\n//     dispatch(changeFilter(value));\n//   };\n\n//   useEffect(() => {\n//     try {\n//       const contactsLocalStorage = localStorage.getItem(\"contacts\");\n//       // setContacts(\n//       //   contactsLocalStorage\n//       //     ? JSON.parse(contactsLocalStorage)\n//       //     : [...initialState.contacts]\n//       // );\n//       contactsLocalStorage &&\n//         dispatch(initialContacts(JSON.parse(contactsLocalStorage)));\n//     } catch {\n//       console.log(\"Невалидный JSON\");\n//     }\n//   }, []);\n\n//   const filterContacts = () => {\n//     if (!filter.length) {\n//       return contacts;\n//     } else {\n//       return contacts.filter((elem) =>\n//         elem.name.toLowerCase().includes(filter.toLowerCase())\n//       );\n//     }\n//   };\n//   const uniqueContact = (name) => {\n//     return contacts.some(\n//       (contact) => contact.name.toLowerCase() === name.toLowerCase()\n//     );\n//   };\n\n//   const add = (contactObj) => {\n//     uniqueContact(contactObj.name)\n//       ? alert(`${contactObj.name} is already in contacts`)\n//       : //   : setContacts((prev) => [...prev, contactObj]);\n//         dispatch(addContact(contactObj));\n//   };\n\n//   const deleteContacts = (id) => {\n//     // setContacts((prev) => prev.filter((contact) => contact.id !== id));\n//     dispatch(deleteContact(id));\n//   };\n\n//   useEffect(() => {\n//     localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n//   }, [contacts]);\n\n//   return (\n//     <div>\n//       <h1>Phonebook</h1>\n//       <ContactForm addToPhonebook={add} />\n\n//       <h2>Contacts</h2>\n//       <Filter filter={filter} inputHandler={inputHandler} />\n//       <ContactList\n//         filteredContacts={filterContacts()}\n//         deleteContact={deleteContacts}\n//       />\n//     </div>\n//   );\n// };\n\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import { BrowserRouter } from \"react-router-dom\";\n// import { Provider } from \"react-redux\";\n// import store from \"./redux/store\";\n// import \"./index.css\";\n// import App from \"./App\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store}>\n//       <BrowserRouter>\n//         <App />\n//       </BrowserRouter>\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n"],"sourceRoot":""}