{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactListItem.module.css","components/Filter/Filter.module.css","redux/constants/index.js","redux/toolkit/reducers/contactsReducer.js","redux/toolkit/reducers/index.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","redux/toolkit/actions/contacts.js","App.js","index.js"],"names":["module","exports","ADD_CONTACT","DELETE_CONTACT","INITIAL_CONTACT","CHANGE_FILTER","contacts","createReducer","items","id","name","number","filter","state","payload","item","rootReducer","combineReducers","store","configureStore","reducer","initialState","ContactForm","addToPhonebook","useState","setForm","inputHandler","target","value","prev","onSubmit","event","preventDefault","contact","uuidv4","className","styles","contactFormLable","onChange","type","placeholder","ContactListItem","deleteContact","contactListItemBtn","onClick","ContactList","filteredContacts","map","Filter","FilterLable","addContact","createAction","changeFilter","initialContacts","App","useSelector","dispatch","useDispatch","useEffect","contactsLocalStorage","localStorage","getItem","JSON","parse","console","log","setItem","stringify","contactObj","some","toLowerCase","alert","length","elem","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fbdccc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactFormLable\":\"ContactForm_contactFormLable__24Pjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItemBtn\":\"ContactListItem_contactListItemBtn__Zz2BS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterLable\":\"Filter_FilterLable__3aYIw\"};","export const ADD_CONTACT = \"@contact/add\";\nexport const DELETE_CONTACT = \"@contact/delete\";\nexport const INITIAL_CONTACT = \"@contact/initial\";\n\nexport const CHANGE_FILTER = \"@filter/change\";\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  CHANGE_FILTER,\n  INITIAL_CONTACT,\n} from \"../../constants/index\";\nconst initialState = {\n  items: [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ],\n  filter: \"\",\n};\n\nconst contacts = createReducer(initialState, {\n  [ADD_CONTACT]: (state, { payload }) => ({\n    ...state,\n    items: [...state.items, payload],\n  }),\n\n  [DELETE_CONTACT]: (state, { payload }) => ({\n    ...state,\n    items: state.items.filter((item) => item.id !== payload),\n  }),\n\n  [CHANGE_FILTER]: (state, { payload }) => ({\n    ...state,\n    filter: payload,\n  }),\n  [INITIAL_CONTACT]: (state, { payload }) => ({\n    ...state,\n    items: payload,\n  }),\n});\n\nexport default contacts;\n\n// const contacts = (state = initialState, action) => {\n//   switch (action.type) {\n//     case ADD_CONTACT:\n//       return { ...state, items: [...state.items, action.payload] };\n//     case DELETE_CONTACT:\n//       return {\n//         ...state,\n//         items: state.items.filter((item) => item.id !== action.payload),\n//       };\n//     case CHANGE_FILTER:\n//       return {\n//         ...state,\n//         filter: action.payload,\n//       };\n//     case INITIAL_CONTACT:\n//       return {\n//         ...state,\n//         items: action.payload,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export default contacts;\n","import { combineReducers } from \"redux\";\nimport contacts from \"./contactsReducer\";\n\nconst rootReducer = combineReducers({\n  contacts,\n});\n\nexport default rootReducer;\n","// import { createStore } from \"redux\";\n// import rootReducer from \"./toolkit/reducers/index\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./toolkit/reducers/index\";\n\nconst store = configureStore({ reducer: rootReducer });\n\nexport default store;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = ({ addToPhonebook }) => {\n  const [{ name, number }, setForm] = useState({\n    ...initialState,\n  });\n\n  const inputHandler = ({ target }) => {\n    const { value, name } = target;\n    setForm((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    addToPhonebook(contact);\n\n    setForm(initialState);\n  };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <label className={styles.contactFormLable}>\n          <input\n            onChange={inputHandler}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name...\"\n            value={name}\n          ></input>\n        </label>\n        <label className={styles.contactFormLable}>\n          <input\n            onChange={inputHandler}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter number...\"\n            value={number}\n          ></input>\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  addToPhonebook: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport styles from \"./ContactListItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactListItem = ({ id, name, number, deleteContact }) => {\n  return (\n    <>\n      <li key={id}>\n        {name}:{number}\n        <button\n          className={styles.contactListItemBtn}\n          onClick={() => deleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;","import React from \"react\";\nimport ContactListItem from \"./ContactListItem\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ filteredContacts, deleteContact }) => {\n  return (\n    <ul>\n      {filteredContacts.map((contact) => (\n        <ContactListItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          deleteContact={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import React from 'react';\nimport styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filter, inputHandler }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <label className={styles.FilterLable}>\n        <input\n          onChange={inputHandler}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name...\"\n          value={filter}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  inputHandler: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  CHANGE_FILTER,\n  INITIAL_CONTACT,\n} from \"../../constants/index\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(ADD_CONTACT);\n// export const addContact = (contact) => ({\n//   type: ADD_CONTACT,\n//   payload: contact,\n// });\n\nexport const deleteContact = createAction(DELETE_CONTACT);\n// export const deleteContact = (id) => ({\n//   type: DELETE_CONTACT,\n//   payload: id,\n// });\n\nexport const changeFilter = createAction(CHANGE_FILTER);\n\n// export const changeFilter = (filter) => ({\n//   type: CHANGE_FILTER,\n//   payload: filter,\n// });\n\nexport const initialContacts = createAction(INITIAL_CONTACT);\n\n// export const initialContacts = (contacts) => ({\n//   type: INITIAL_CONTACT,\n//   payload: contacts,\n// });\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport {\n  addContact,\n  deleteContact,\n  changeFilter,\n  initialContacts,\n} from \"./redux/toolkit/actions/contacts\";\n\n// const initialState = {\n//   contacts: [\n//     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//   ],\n//   filter: \"\",\n// };\n\nconst App = () => {\n  // const [contacts, setContacts] = useState([...initialState.contacts]);\n  // const [filter, setFilter] = useState(initialState.filter);\n  const contacts = useSelector((state) => state.contacts.items);\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const inputHandler = ({ target }) => {\n    const { value } = target;\n    // setFilter(value);\n    dispatch(changeFilter(value));\n  };\n\n  useEffect(() => {\n    try {\n      const contactsLocalStorage = localStorage.getItem(\"contacts\");\n      // setContacts(\n      //   contactsLocalStorage\n      //     ? JSON.parse(contactsLocalStorage)\n      //     : [...initialState.contacts]\n      // );\n      contactsLocalStorage &&\n        dispatch(initialContacts(JSON.parse(contactsLocalStorage)));\n    } catch {\n      console.log(\"Невалидный JSON\");\n    }\n  }, []);\n\n  const filterContacts = () => {\n    if (!filter.length) {\n      return contacts;\n    } else {\n      return contacts.filter((elem) =>\n        elem.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n  const uniqueContact = (name) => {\n    return contacts.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const add = (contactObj) => {\n    uniqueContact(contactObj.name)\n      ? alert(`${contactObj.name} is already in contacts`)\n      : //   : setContacts((prev) => [...prev, contactObj]);\n        dispatch(addContact(contactObj));\n  };\n\n  const deleteContacts = (id) => {\n    // setContacts((prev) => prev.filter((contact) => contact.id !== id));\n    dispatch(deleteContact(id));\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm addToPhonebook={add} />\n\n      <h2>Contacts</h2>\n      <Filter filter={filter} inputHandler={inputHandler} />\n      <ContactList\n        filteredContacts={filterContacts()}\n        deleteContact={deleteContacts}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}